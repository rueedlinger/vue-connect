name: Publish Master
on:
  push:
    branches:
      - 'master'
jobs:
  test-api:
    runs-on: ubuntu-latest
    name: Test Backend
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install pipenv
        env:
          PIPENV_NOSPIN: 'true'
          WORKON_HOME: ~/.pipenv/virtualenvs
          PIPENV_CACHE_DIR: ~/.pipenv/pipcache
        run: pip install pipenv
      - name: Build and Test
        env:
          PIPENV_NOSPIN: 'true'
          WORKON_HOME: ~/.pipenv/virtualenvs
          PIPENV_CACHE_DIR: ~/.pipenv/pipcache
        run: |
          cd vue-connect-api
          pipenv install --dev
          pipenv run pytest
  test-ui:
    runs-on: ubuntu-latest
    name: Test Frontend
    steps:
    - uses: actions/checkout@v2
      name: Check out repository
    - uses: actions/setup-node@v1
      name: Set up Node.js
      with:
        node-version: 12
    - run: |
        cd vue-connect-ui
        npm ci
        npm run lint
  docker:
      runs-on: ubuntu-latest
      steps:
        -
          name: Checkout
          uses: actions/checkout@v2
        -
          name: Docker meta
          id: docker_meta
          uses: crazy-max/ghaction-docker-meta@v1
          with:
            images: rueedlinger/vue-connect
            tag-latest: false
            tag-semver: "{{version}}"
        -
          name: Set up QEMU
          uses: docker/setup-qemu-action@v1
        -
          name: Set up Docker Buildx
          id: buildx
          uses: docker/setup-buildx-action@v1
        -
          name: Login to DockerHub
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        -
          name: Get current time
          uses: srfrnk/current-time@master
          id: current-time
        -
          name: Build and push Docker image
          id: docker_build
          uses: docker/build-push-action@v2
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: ${{ steps.docker_meta.outputs.tags }}
            labels: ${{ steps.docker_meta.outputs.labels }}
            build-args: |
              IMAGE_VERSION=${{ steps.docker_meta.outputs.version }}
              IMAGE_TAGS=${{ steps.docker_meta.outputs.tags }}
              IMAGE_BUILD_TIME=${{ steps.current-time.outputs.time }}
              IMAGE_GITHUB_SHA=${{ github.sha }}
              IMAGE_GITHUB_REPO=${{ github.repository }}